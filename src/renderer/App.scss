/*
* @NOTE: Prepend a `~` to css file paths that are in your node_modules
*        See https://github.com/webpack-contrib/sass-loader#imports
*/

.flexRow {
  display: flex;
  flex-direction: row;
}
.flexCol {
  display: flex;
  flex-direction: column;
}

.flexStart {
  display: flex;
  justify-self: flex-start;
}

.flexEnd {
  display: flex;
  justify-self: flex-end;
}

.flex1 {
  display: flex;
  flex: 1;
}

@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded');


:root {
  user-select: none;
  font-family: HanYiQiHei;
  color: rgb(227, 227, 227);
  background-color: #000;
}

.AppContainer {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: column;
}

.BackgroundContainer {
  position: fixed;
  left: 0;
  right: 0;
  z-index: -1;
  display: block;
  width: 100%;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  filter: blur(10px);
}

.MainContainer {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  overflow: hidden;
  box-sizing: border-box;
  padding: 1.5em;
  gap: 1.5em;
}

.LeftMenuContainer {
  min-width: 200px;
  max-width: 300px;
  width: 30%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.MenuBox {
  width: 100%;
  height: 100%;
  border-radius: 1.5em;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: border-box;
  padding: 10px;
  gap: 1em;
  outline: 3px solid rgba(255, 255, 255, 0.2);
  background-color: #000;
}
.MenuBox:hover {
  outline: 3px solid rgba(255, 255, 255, 0.5);
  transition: all 0.1s ease-in-out;
}

.MenuButton {
  width: 100%;
  height: 2.5em;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: 9999px;
  outline: none;
  border: none;
  transition: background-color 0.1s ease-out;
}
.MenuButton:disabled {
  cursor:default;
}

.MenuButton.up {
  box-shadow: inset 0 1px 3px #404040;
}
.MenuButton.down {
  box-shadow: inset 0 -1px 3px #404040;
}

.MenuList {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow-y: scroll;
  scrollbar-width: none;
  padding-top: 1em;
  padding-bottom: 1em;
  gap: 0.3em;
}
.MenuList > * {
  flex-shrink: 0; 
}

.MenuItem {
  box-sizing: border-box;
  width: 100%;
  height: 4em;
  text-align: center;
  background-color: #000;
  color: white;
  border-radius: 10px;
  font-weight: bold;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.MenuItem:hover {
  background-color: #ffff0041;
  transition: all 0.2s ease-out;
}

.MenuItem.active {
  color: black;
  background-color: yellow;
  transition: all 0.2s ease-out;
}

.CardGridContainer {
  position: relative;
  flex: 1;
  min-width: none;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  gap: 1em;
}

.CardGridTopBar {
  width: 100%;
  height: 50px;
  display: flex;
  /* background-color: #f9a03f; */
}

.CharacterBarContainer {
  width: 100%;
  height: 100%;
  border-radius: 9999px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding-left: 1em;
  padding-right: 1em;
  box-sizing: border-box;
  gap: 1em;
  background-color: #000000;
  box-shadow: inset 0 3px 5px #7b7b7b;
}

.CharacterBarButtonContainer {
  width: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.CharacterBarImageList {
  width: 100%;
  height: 80%;
  box-sizing: border-box;
  border-radius: 8px;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
  overflow-x: scroll;
  overflow-y: visible;
  scrollbar-width: none;
  scroll-snap-type: x mandatory;
  transform: skewX(-25.3deg);
}

.CharacterBarImageList > * { 
  margin-left: -10px;
  scroll-margin-left: -15px;
  scroll-snap-align: start;
  transform: skewX(25.3deg);
}

.CharacterBarImageContainer:first-child {
  margin-left: 0px;
}
.CharacterBarImageContainer {
  height: 100%;
  cursor: pointer;
  overflow: visible;
}
.CharacterBarImageContainer > img {
  height: 100%;
}

.CharacterBarImage {
  height: 100%;
}

.CharacterActiveMask {
  position: absolute;
  top: -1px;
  bottom: 0;
  left: -1px;
  right: 0;
  opacity: 0;
  transition: opacity 0.1s ease-out;
}

.CharacterActiveMask.active {
  transition: opacity 0.1s ease-out;
  opacity: 1;
}
.CardGridContainer {
  --borderRadius: 2em;

  .Scrollbar {
    --trackWidth: 14px;
    --arrowSize: 16px;

    position: relative;
    width: 100%;
    height: 100%;

    >.Wrapper {
      position: absolute;
      overflow: hidden;
      inset: 0px 0px 0px 0px;

      width: 100%;
      height: 100%;
      background-color: #ffffff38;
      border-radius: var(--borderRadius);
    }

    .Track {
      position: absolute;
      width: var(--trackWidth);
      height: calc(100% - 2*var(--borderRadius));
      top: var(--borderRadius);
      right: 0;
      transform: translateX(-9px);
      outline: 2px solid #ccc;
      border-radius: 9999px;
      padding: 4px;
      padding-top: var(--arrowSize);
      padding-bottom: var(--arrowSize);
      box-sizing: border-box;
      background-color: #00000088;

      &::before {
        font-family: 'Material Symbols Rounded';
        font-size: var(--arrowSize);
        color: #ccc;
        position: absolute;
        left: calc(.5*(var(--trackWidth) - var(--arrowSize)));
        content: '\e5c7';
          top: 0;
      }
      &::after {
        font-family: 'Material Symbols Rounded';
        font-size: var(--arrowSize);
        color: #ccc;
        position: absolute;
        left: calc(.5*(var(--trackWidth) - var(--arrowSize)));
        content: '\e5c5';
        bottom: 0;
      }
    }
    

    .Thumb {
      border-radius: 9999px;
      background-color: #ccc;
      box-sizing: border-box;
      cursor: default;
    }
  }

  .CardGrid {
    position: relative;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: start;
    align-items: start;
    align-content: start;
    padding: 1em;
    padding-right: 2em;
    gap: 1.5em;
  
    & > * {
      flex-shrink: 0;
      flex-grow: 0;
    }
  }
}

.ModCardContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow: hidden;
  width: 12em;
  height: 20em;
  box-sizing: border-box;
  overflow: hidden;
  outline: 2px solid #3e3e3e;
  --br : 1em;
  border-radius: var(--br) var(--br) 0 var(--br);
  color: white;
  background-color: rgb(103, 103, 103);
  /* box-shadow: 0 0 5px inset #ffffff48; */
  user-select: none;
  transition: background-color 0.2s ease-in, 
              outline 0.2s ease-in,
              transform 0.2s ease-in;
  &:hover {
    background-color: rgb(82, 82, 82);
    transform: scale(1.05);
    transition: all 0.15s ease-out;
  }
  &.preActive {
    outline: 3px dashed #ffff0099;
    transition: all 0.1s ease-out;
  }
  &.active {
    outline: 5px solid #ffff00;
    transition: all 0.1s ease-out;
  }
  &.preInactive {
    outline: 3px dashed #f00a;
    transition: all 0.1s ease-out;
  }
  &.inactive {
    outline: 3px solid #000;
    transition: all 0.1s ease-out;
  }

  &>.CoverImage {
    width: 100%;
    min-height: 50%;
    max-height: 50%;
    object-fit: cover;
  }

  &>.InfoContainer {
    --padding: 12px;
    position: relative;
    width: 100%;
    min-height: 50%;
    max-height: 50%;
    box-sizing: border-box;
    padding: var(--padding);
    padding-top: 5px;

    display: flex;
    flex-direction: column;
    gap: 0.5em;
    &.CharacterCardStyle {
      --avatarRadius: 25px;
      padding-top: calc(var(--avatarRadius) + 5px);
      &>.AvatarImage {
        position: absolute;
        left: var(--padding);
        top: calc(-1 * var(--avatarRadius));
        width: calc(2 * var(--avatarRadius));
        height:calc(2 * var(--avatarRadius));
        border-radius: 50%;
        background-color: #ffffff;
      }
      &>.AvatarNameText {
        position: absolute;
        left: calc(2 * (var(--padding) + var(--avatarRadius)));
        top: 0;
        white-space: nowrap;

        &::after {
          content: "";
          position: absolute;
          bottom: -2px;
          left: -10px;
          width: calc(12em - 2 * var(--avatarRadius) - 2 * var(--padding));
          height: 1px;
          background-color: #fff5;
        }
      }
    }

    &>.Title {
      width: 100%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    &>.Desc {
      width: 100%;
      flex: 1;
      overflow: hidden;
      font-size: x-small;
      text-overflow:clip;
      color: #ccc;
    }
  }
}

.BottomBarContainer {
  width: 100%;
  height: 4em;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  background-color: #283c5d48;

  .ButtonGroup {
    width: auto;
    height: 100%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    box-sizing: border-box;
    padding: 0.5em;
    gap: 0.5em;
    // background-color: #b12aa248;
  }
}

.Button {
  width: 8em;
  height: 100%;
  color: inherit;
  background-color: #000000;
  border: none;
  border-radius: 9999px;
  font-size: 16px;
  font-weight: bold;
  cursor: pointer;
  outline: 3px solid rgba(255, 255, 255, 0.2);

  &.highlight {
    color: #f9fc57;
  }
}

.ExitButtonContainer {
  width: auto;
  height: auto;
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  animation: none;
}
.ExitButtonContainer:hover {
  animation: pulse 1s linear infinite;
}

@keyframes pulse {
  25% {
    transform: var(--translate) scale(1.05);
  }
  75% {
    transform: var(--translate) scale(0.95);
  }
}

.ExitButtonImg {
  width: auto;
  height: auto;
  display: block;
  cursor: pointer;
}


.ModalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: repeating-linear-gradient(40deg, transparent 0 5px, rgba(255, 255, 255, .07) 5px 10px);
  background-color: rgba(0, 0, 0, 0.8);
}

.ModalContainer {
  overflow: visible;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 80%;
  height: 80%;
  max-width: 900px;
  max-height: 600px;
}

.Modal {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 20px;
  box-shadow: inset 0 0 5px #ffffff48;
  background-color: rgb(51, 51, 51);
  position: relative;
  overflow: visible;
  border: 3px solid #888888;
}

.ModalShape {
  --r: 4px; /* the radius */
  --s: 40px; /* size of inner curve */
  --x: 10px; /* horizontal offset (no percentage) */
  --y: 0px; /* vertical offset (no percentage) */
  
  --_m:/calc(2*var(--r)) calc(2*var(--r)) radial-gradient(#000 70%,#0000 72%);
  --_g:conic-gradient(at calc(100% - var(--r)) var(--r),#0000 25%,#000 0);
  --_d:(var(--s) + var(--r));
  mask:
    calc(100% - var(--_d) - var(--x)) 0 var(--_m),
    100% calc(var(--_d) + var(--y)) var(--_m),
    radial-gradient(var(--s) at 100% 0,#0000 99%,#000 calc(100% + 1px)) 
     calc(-1*var(--r) - var(--x)) calc(var(--r) + var(--y)),
    var(--_g) calc(-1*var(--_d) - var(--x)) 0,
    var(--_g) 0 calc(var(--_d) + var(--y));
  mask-repeat: no-repeat;
}

.ModEditModalTitleBar {
  height: 50px;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  box-sizing: border-box;
  padding-left: 30px;
  border-radius: 20px 20px 0 0;
  font-size: larger;
  background-image: linear-gradient(to bottom, #000000 0%, rgba(255, 255, 255, 0) 100%), 
}
.ModEditModalMainContainer {
  display: flex;
  flex: 1;
  width: 100%;
  box-sizing: border-box;
  /* background-color: #691818; */
}

.ModEditModalLeftContainer {
  flex: 1;
  min-width: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  box-sizing: border-box;
  padding: 30px;
  /* background-color: #47872a; */
}

.ModEditModalRightContainer {
  display: flex;
  min-width: 50%;
  max-width: 300px;
  height: 100%;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  box-sizing: border-box;
  padding: 2em;
  gap: 1em;

  > .ButtonGroup {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1em;
    box-sizing: border-box;
    padding: 5px;
    padding-left: 10px;
    padding-right: 10px;

    > button {
      width: 90%;
      max-width: 250px;
      height: 3em;
    }
  }
}

.ModEditModalImageContainer {
  position: relative;
  width: 100%;
  max-width: 250px;
  aspect-ratio: 1;
  border-radius: 20px;
  border: 2px solid rgb(255, 255, 255);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;

  & > img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: none;
    transition: filter 0.1s ease-in;
    z-index: 0;
  }

  &:hover > img {
    filter: blur(3px) brightness(80%);
  }

  .ButtonGroup {
    width: 100%;
    height: 25%;
    z-index: 1;
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    padding: 8px;
    gap: 5px;
    opacity: 0%;
    transition: opacity 0.1s ease-in;
  
    > button {
      font-family: inherit;
      cursor: pointer;
      height: 100%;
      background-color: black;
      border: none;
      border-radius: 9999px;
      transform: scale(100%);
      transition: transform 0.1s ease-out;
      &:hover {
        transform: scale(110%);
      }
    }
    .DeleteButtonContainer {
      aspect-ratio: 1;
      color: rgb(200, 0, 0);
    }
    .SelectImageButtonContainer {
      flex: 1;
      color: inherit;
    }
  }
  &:hover > .ButtonGroup {
    opacity: 100%;
  }
}



.EditableTextBoxContainer {
  width: 100%;
  height: auto;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  box-sizing: border-box;
  gap: 0.5em;
  color: white;
  /* background-color: #f9a03f; */
}

.EditableTextBox {
  flex: 1;
  height: 1.1em;
  padding: 5px;
  border: 1px solid #c3c3c3;
  outline: none;
  border-radius: 9999px;
  color: white;
  background-color: #474747;
  resize: none;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  /* text-align-last: center; */
}
.EditableTextBox:focus {
  background-color: #000000;
  border: 2px solid #ffffff;
}

.ModalExitButton {
  --translate: translate(44px, -36px);
  width: auto;
  height: auto;
  position: absolute;
  top: 0;
  right: 0;
  transform: var(--translate); /* (74 - 10, 36) */
  z-index: 10;
}
